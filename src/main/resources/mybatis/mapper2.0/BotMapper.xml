<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="my.prac.core.prjbot.dao.BotDAO">
	<insert id="insertBotWordSave" parameterType="hashMap">
		/* bot.xml insertBotWordSave */
		INSERT INTO TBOT_WORD_SAVE
			 (REQ
			 ,RES
			 ,ROOM_NAME
			 ,USER_NAME
			 ,INSERT_DATE
			 ,LIMIT_YN)
		SELECT '/'||#{req, jdbcType=VARCHAR}
			  ,#{res, jdbcType=VARCHAR}
			  ,#{roomName, jdbcType=VARCHAR}
			  ,#{userName, jdbcType=VARCHAR}
			  ,SYSDATE
			  ,'0'
		  FROM DUAL
		 WHERE NOT EXISTS (SELECT * 
		 					 FROM TBOT_WORD_SAVE C 
		 					WHERE C.REQ = '/'||#{req, jdbcType=VARCHAR}
		 					  AND C.LIMIT_YN IN ('1','2'))
    </insert>
    
    <select id="selectBotWordSaveOne" parameterType="hashMap" resultType="String" >
		/* bot.xml selectBotWordSaveOne */
		SELECT RES
		  FROM (SELECT *
				FROM TBOT_WORD_SAVE A
			    WHERE A.REQ = #{param0, jdbcType=VARCHAR}
				 AND A.ROOM_NAME = #{roomName, jdbcType=VARCHAR}
			     AND A.LIMIT_YN = '0'
			    ORDER BY DBMS_RANDOM.VALUE)
		 WHERE ROWNUM = 1
	</select>
	
	<select id="selectBotManual" parameterType="hashMap" resultType="String" >
		 /* bot.xml selectBotManual */
		SELECT A.TEXT
		  FROM TBOT_MANUAL A
	</select>
	<select id="selectBotManualG" parameterType="hashMap" resultType="String" >
		 /* bot.xml selectBotManualG */
		SELECT A.TEXT
		  FROM TBOT_MANUAL_G A
	</select>
	
	<select id="selectBotLimitWordSaveAll" parameterType="hashMap" resultType="String" >
		 /* bot.xml selectBotLimitWordSaveAll */
		SELECT RES
		  FROM (SELECT '3' AS ORD
				    ,RES
				    ,SORT
				FROM (SELECT LISTAGG(A.REQ, ', ') WITHIN GROUP(ORDER BY A.REQ) || ' → ' || A.RES AS RES,SORT
					   FROM TBOT_WORD_SAVE A
					  WHERE A.LIMIT_YN = #{limitYn, jdbcType=VARCHAR}
					  GROUP BY A.RES,SORT
					  )
				  )
		 ORDER BY ORD,SORT DESC
		 
	</select>
	
	<select id="selectBotWordSaveAll" parameterType="hashMap" resultType="String" >
		 /* bot.xml selectBotWordSaveAll */
		SELECT RES
		  FROM (
			   SELECT '1' AS ORD
					  ,RES
				 FROM (SELECT A.REQ || ' → ' || LISTAGG(A.RES, ', ') WITHIN GROUP(ORDER BY A.RES) AS RES
					     FROM TBOT_WORD_SAVE A
					    WHERE A.ROOM_NAME = #{roomName, jdbcType=VARCHAR}
						  AND A.LIMIT_YN = '0'
					    GROUP BY A.REQ
					    )
			   )
		 ORDER BY ORD
		 
	</select>
	
	<select id="selectBotImgSaveAll" parameterType="hashMap" resultType="String" >
		 /* bot.xml selectBotImgSaveAll */
		SELECT RES
		  FROM (SELECT '2' AS ORD
					  ,LISTAGG(B.IN_PRM, ', ') WITHIN GROUP(ORDER BY B.IN_PRM) || ' → ' || B.OUT_PRM AS RES
				  FROM TBOT_IMG_MCH B
				 WHERE (B.ROOM_NAME IS NULL OR B.ROOM_NAME = #{roomName, jdbcType=VARCHAR})
			     GROUP BY B.OUT_PRM)
		 ORDER BY ORD,RES
		 
	</select>
	
	<select id="selectBotWordReplaceAll" parameterType="hashMap" resultType="String" >
		 /* bot.xml selectBotWordReplaceAll */
		SELECT RES
		  FROM (SELECT '4' AS ORD
				      ,LISTAGG(B.REQ, ', ') WITHIN GROUP(ORDER BY B.REQ) || ' → ' || B.RES AS RES
				  FROM TBOT_WORD_REPLACE B
			     WHERE (B.ROOM_NAME IS NULL OR B.ROOM_NAME = #{roomName, jdbcType=VARCHAR})
			     GROUP BY B.RES)
		 ORDER BY ORD, RES
		 
	</select>
	
	<select  id="selectBotWordSaveMasterCnt" parameterType="hashMap" resultType="int" >
		SELECT COUNT(1) 
		  FROM TBOT_WORD_SAVE_MASTER A
		 WHERE A.USER_NAME = #{userName, jdbcType=VARCHAR}
		   AND NVL(A.ROOM_NAME, #{roomName, jdbcType=VARCHAR}) = #{roomName, jdbcType=VARCHAR}
		
	</select>
	
	<delete id="deleteBotWordSaveMaster" parameterType="hashMap">
		/* bot.xml deleteBotWordSaveMaster */
		DELETE FROM TBOT_WORD_SAVE A
		 WHERE A.REQ = '/'||#{req, jdbcType=VARCHAR}
		   AND A.RES = #{res, jdbcType=VARCHAR}
		   AND A.ROOM_NAME = #{roomName, jdbcType=VARCHAR}
		   AND A.LIMIT_YN = '0'
	</delete>
	<delete id="deleteBotWordSaveAllDeleteMaster" parameterType="hashMap">
		/* bot.xml deleteBotWordSaveAllDeleteMaster */
		DELETE FROM TBOT_WORD_SAVE A
		 WHERE A.ROOM_NAME = #{roomName, jdbcType=VARCHAR}
		   AND A.LIMIT_YN = '0'
	</delete>
	
	<delete id="deleteBotWordSave" parameterType="hashMap">
		/* bot.xml deleteBotWordSave */
		DELETE FROM TBOT_WORD_SAVE A
		 WHERE A.REQ = '/'||#{req, jdbcType=VARCHAR}
		   AND A.RES = #{res, jdbcType=VARCHAR}
		   AND (A.USER_NAME = #{userName, jdbcType=VARCHAR}
		        OR 
		        A.USER_NAME IN (SELECT B.NAME_A
								  FROM TBOT_NAME_MCH B
								 WHERE B.NAME_B = #{userName, jdbcType=VARCHAR}
								)
				)
		   AND A.ROOM_NAME = #{roomName, jdbcType=VARCHAR}
		   AND A.LIMIT_YN = '0'
	</delete>
	
	
	<delete id="deleteBotWordReplaceMaster" parameterType="hashMap">
		/* bot.xml deleteBotWordReplaceMaster */
		DELETE FROM TBOT_WORD_REPLACE A
		 WHERE A.REQ = #{req, jdbcType=VARCHAR}
		   AND A.RES = #{res, jdbcType=VARCHAR}
		   AND A.ROOM_NAME = #{roomName, jdbcType=VARCHAR}
	</delete>
	<delete id="deleteBotWordReplace" parameterType="hashMap">
		/* bot.xml deleteBotWordReplace */
		DELETE FROM TBOT_WORD_REPLACE A
		 WHERE A.REQ = #{req, jdbcType=VARCHAR}
		   AND A.RES = #{res, jdbcType=VARCHAR}
		   AND (A.USER_NAME = #{userName, jdbcType=VARCHAR}
		        OR 
		        A.USER_NAME IN (SELECT B.NAME_A
								  FROM TBOT_NAME_MCH B
								 WHERE B.NAME_B = #{userName, jdbcType=VARCHAR}
								)
				)
		   AND A.ROOM_NAME = #{roomName, jdbcType=VARCHAR}
	</delete>
	
	
	
	
	<select id="selectBotImgSaveOne" parameterType="String" resultType="String" >
		/* bot.xml selectBotImgSaveOne */
		SELECT RES
		  FROM TBOT_IMG_SAVE A
	     WHERE A.REQ = #{param, jdbcType=VARCHAR}
	</select>
	
	<insert id="insertBotImgSaveOne" parameterType="hashMap">
		/* bot.xml insertBotImgSaveOne */
		INSERT INTO TBOT_IMG_SAVE
			 (REQ
			 ,RES
			 )
		SELECT #{asis, jdbcType=VARCHAR}
			  ,#{tobe, jdbcType=VARCHAR}
		  FROM DUAL
    </insert>
    
    <select id="selectBotImgMch" parameterType="hashMap" resultType="String" >
		/* bot.xml selectBotImgMch */
		SELECT OUT_PRM
		  FROM (SELECT A.OUT_PRM
				FROM TBOT_IMG_MCH A
			    WHERE A.IN_PRM LIKE #{param0, jdbcType=VARCHAR}||'%'
			      AND (A.ROOM_NAME IS NULL OR A.ROOM_NAME = #{roomName, jdbcType=VARCHAR})
			    ORDER BY DBMS_RANDOM.VALUE)
		 WHERE ROWNUM = 1   
	</select>
	
	<select id="selectBotRaidSaveAll" parameterType="hashMap" resultType="String" >
		 /* bot.xml selectBotRaidSaveAll */
		SELECT A.CHAR_NAME
		  FROM TBOT_RAID_SAVE A
		 WHERE A.ROOM_NAME = #{roomName, jdbcType=VARCHAR}
	</select>
	<insert id="insertBotRaidSaveOne" parameterType="hashMap">
		/* bot.xml insertBotRaidSaveOne */
		INSERT INTO TBOT_RAID_SAVE
			 (ROOM_NAME
			 ,CHAR_NAME
			 )
		SELECT #{roomName, jdbcType=VARCHAR}
			  ,#{param1, jdbcType=VARCHAR}
		  FROM DUAL
    </insert>
    <select id="selectSupporters" parameterType="String" resultType="int" >
		 /* bot.xml selectSupporters */
		SELECT NVL(MAX(A.ICON),0)
		  FROM TBOT_SUPPORTERS A
		 WHERE upper(A.USER_ID) = upper(#{param1, jdbcType=VARCHAR})
	</select>
	
	
	<select id="selectBotImgCharSave" parameterType="String" resultType="String" >
		/* bot.xml selectBotImgCharSave */
		SELECT RES
		  FROM TBOT_IMG_CHAR_SAVE A
	     WHERE A.REQ = #{req, jdbcType=VARCHAR}
	       AND ROWNUM = 1
	</select>
	
	<insert id="insertBotImgCharSave" parameterType="hashMap">
		/* bot.xml insertBotImgCharSave */
		INSERT INTO TBOT_IMG_CHAR_SAVE
			 (CHAR_NAME
			 ,REQ
			 ,RES
			 ,TITLE
			 ,CLASS_NAME
			 ,STAR_YN
			 )
		SELECT #{char_name, jdbcType=VARCHAR}
		      ,#{req, jdbcType=VARCHAR}
			  ,#{res, jdbcType=VARCHAR}
			  ,#{title, jdbcType=VARCHAR}
			  ,#{class_name, jdbcType=VARCHAR}
			  ,#{star_yn, jdbcType=VARCHAR}
		  FROM DUAL
    </insert>
    
    <select id="selectBotImgCharSaveI3" parameterType="String" resultType="hashMap" >
		/* bot.xml selectBotImgCharSaveI3 */
		SELECT TITLE,CHAR_NAME,CLASS_NAME,STAR_YN
		  FROM TBOT_IMG_CHAR_SAVE A
	     WHERE A.RES = #{res, jdbcType=VARCHAR}
	       AND ROWNUM = 1
	</select>
	
	
	<insert id="insertBotWordHis" parameterType="String">
		/* bot.xml insertBotWordHis */
		INSERT INTO TBOT_WORD_HIS
			 (REQ
			 ,RES
			 ,ROOM_NAME
			 ,USER_NAME
			 ,INSERT_DATE
			 ,ISSUE_YN)
		VALUES
			 (#{req, jdbcType=VARCHAR}
			 ,#{res, jdbcType=VARCHAR}
			 ,#{roomName, jdbcType=VARCHAR}
			 ,#{userName, jdbcType=VARCHAR}
			 ,sysdate
			 ,#{issue_yn, jdbcType=VARCHAR})
	</insert>
	
	<select id="selectRoomList" resultType="String" parameterType="hashMap">
		/* bot.xml selectRoomList */
		SELECT A.ROOM_NAME
		  FROM TBOT_WORD_SAVE_MASTER A
		 WHERE A.ROOM_NAME IS NOT NULL
		   AND A.TEST_YN ='1'
		   AND EXISTS (SELECT 1
						 FROM TBOT_WORD_SAVE_MASTER B
					    WHERE B.USER_NAME = #{userName, jdbcType=VARCHAR}
						  AND B.ROOM_NAME IS NULL)
		 GROUP BY A.ROOM_NAME
	</select>
	
	<select id="selectMarketCondition" resultType="hashMap" parameterType="hashMap">
		/* bot.xml selectMarketCondition */
		SELECT XX.DT
			 , MIN(XX.GOLD) || '~' || MAX(XX.GOLD) AS SISE
			 , MAX(XX.INSERT_DATE)
		  FROM (SELECT X.DT
				     , TO_NUMBER(SUBSTR(X.MSG, INSTR(X.MSG, '-') + 2, INSTR(SUBSTR(X.MSG, INSTR(X.MSG, '-') + 2), 'G') - 1)) AS GOLD
				     , X.INSERT_DATE
				FROM (
					 
					 SELECT AA.MON || '월 ' || AA.WEEK_OF_MONTH || '주차' AS DT
						  , SUBSTR(TO_CHAR(B.RES), INSTR(TO_CHAR(B.RES), #{param1, jdbcType=VARCHAR}), INSTR(SUBSTR(TO_CHAR(B.RES), INSTR(TO_CHAR(B.RES), #{param1, jdbcType=VARCHAR}), 30), '♬')) AS MSG
						  , B.INSERT_DATE
					   FROM TDATE AA, TBOT_WORD_HIS B
					  WHERE RES IS NOT NULL
					    AND (B.REQ LIKE '/ㄱㅁㅈ%' OR B.REQ LIKE '/경매장%')
					    AND B.RES LIKE '%' || #{param1, jdbcType=VARCHAR} || '%'
					    AND B.INSERT_DATE BETWEEN AA.WEEK_START AND AA.WEEK_END
					    AND B.INSERT_DATE > SYSDATE - 60
					 ) X
			   
			   ) XX
		 WHERE GOLD > (
					
					SELECT MAX(TO_NUMBER(SUBSTR(X2.MSG, INSTR(X2.MSG, '-') + 2, INSTR(SUBSTR(X2.MSG, INSTR(X2.MSG, '-') + 2), 'G') - 1))) * 0.5 AS GOLD
					  FROM (
						    
						    SELECT AA.MON || '월 ' || AA.WEEK_OF_MONTH || '주차' AS DT
								  ,SUBSTR(TO_CHAR(B.RES), INSTR(TO_CHAR(B.RES), #{param1, jdbcType=VARCHAR}), INSTR(SUBSTR(TO_CHAR(B.RES), INSTR(TO_CHAR(B.RES), #{param1, jdbcType=VARCHAR}), 30), '♬')) AS MSG
							  FROM TDATE AA
							  	 , TBOT_WORD_HIS B
						     WHERE RES IS NOT NULL
							   AND (B.REQ LIKE '/ㄱㅁㅈ%' OR B.REQ LIKE '/경매장%')
							   AND B.RES LIKE '%' || #{param1, jdbcType=VARCHAR} || '%'
							   AND B.INSERT_DATE BETWEEN AA.WEEK_START AND AA.WEEK_END
							   AND B.INSERT_DATE > SYSDATE - 60
						    ) X2
					 WHERE X2.DT = XX.DT
					 GROUP BY DT)
		 GROUP BY DT
		 ORDER BY 3 DESC
		
	</select>
	
	<select id="selectIssueCase" resultType="hashMap" parameterType="hashMap">
		SELECT TO_CHAR(A.RES) AS RES
			  ,TO_CHAR(A.INSERT_DATE,'YYYY/MM/DD HH24:MI:SS') AS INSERT_DATE
		  FROM TBOT_WORD_HIS A
		 WHERE RES IS NOT NULL
		   AND TRIM(A.REQ) LIKE trim(#{fulltxt, jdbcType=VARCHAR})
		   AND A.ISSUE_YN IS NULL
		   AND A.INSERT_DATE = (SELECT MAX(B.INSERT_DATE)
							 FROM TBOT_WORD_HIS B
							WHERE TRIM(B.REQ) = TRIM(A.REQ)
							  AND B.ISSUE_YN IS NULL)
		
	</select>
	
	<select id="selectBotWordReplace" resultType="String" parameterType="hashMap">
		/* bot.xml selectBotWordReplace */
		SELECT A.RES
		  FROM TBOT_WORD_REPLACE A
		 WHERE RES IS NOT NULL
		   AND A.REQ = #{param1, jdbcType=VARCHAR}
		   AND (A.ROOM_NAME IS NULL OR A.ROOM_NAME = #{roomName, jdbcType=VARCHAR})
		   AND ROWNUM = 1
	</select>
	
	<insert id="insertBotWordReplace" parameterType="hashMap">
		/* bot.xml insertBotWordReplace */
		INSERT INTO TBOT_WORD_REPLACE
			 (REQ
			 ,RES
			 ,ROOM_NAME
			 ,USER_NAME
			 ,INSERT_DATE)
		SELECT #{req, jdbcType=VARCHAR}
			  ,#{res, jdbcType=VARCHAR}
			  ,#{roomName, jdbcType=VARCHAR}
			  ,#{userName, jdbcType=VARCHAR}
			  ,SYSDATE
		  FROM DUAL
    </insert>
    
    <select id="selectBotLoaEngraveCnt" resultType="int" parameterType="String">
		/* bot.xml selectBotLoaEngraveCnt */
		SELECT COUNT(1)
		  FROM TBOT_LOA_ENGRAVE A
		 WHERE A.CHAR_NAME = #{param1, jdbcType=VARCHAR}
	</select>
    <select id="selectBotLoaEngrave" resultType="HashMap" parameterType="String">
		/* bot.xml selectBotLoaEngrave */
		SELECT *
		  FROM TBOT_LOA_ENGRAVE A
		 WHERE A.CHAR_NAME = #{param1, jdbcType=VARCHAR}
	</select>
	
	<insert id="insertBotLoaEngraveBase" parameterType="String">
		/* bot.xml insertBotWordReplace */
		INSERT INTO TBOT_LOA_ENGRAVE
			 (CHAR_NAME
			 ,MODIFY_DATE)
		SELECT #{userId, jdbcType=VARCHAR}
			  ,SYSDATE
		  FROM DUAL
    </insert>
    
    <update id="updateBotLoaEngrave" parameterType="HashMap">
		/* bot.xml insertBotWordReplace */
		 UPDATE TBOT_LOA_ENGRAVE A
    	    SET ${colName} =  #{realLv, jdbcType=NUMERIC}
    	      , MODIFY_DATE = SYSDATE
    	  WHERE A.CHAR_NAME = #{userId, jdbcType=VARCHAR}
    </update>
    
    <insert id="insertBotPowerRank" parameterType="HashMap">
		INSERT INTO TBOT_POWER_RANK
			  (CHAR_NAME
			  ,GUILD_NAME
			  ,SCORE
		      ,TARGET_GB
		      ,LV
		      ,CLASS_GB
			  ,MODIFY_DATE)
		VALUES
			 (upper(#{charName, jdbcType=VARCHAR})
			 ,#{guildName, jdbcType=VARCHAR}
			 ,#{score, jdbcType=NUMERIC}
		     ,#{targetGb, jdbcType=VARCHAR}
		     ,#{lv, jdbcType=NUMERIC}
		     ,#{classGb, jdbcType=NUMERIC}
			 ,SYSDATE)
		
	</insert>
	
	<update id="updateBotPowerRank" parameterType="HashMap">
		UPDATE TBOT_POWER_RANK
		   SET SCORE = #{score, jdbcType=NUMERIC}
		      ,LV = #{lv, jdbcType=NUMERIC}
		      ,GUILD_NAME = #{guildName, jdbcType=VARCHAR}
			  ,MODIFY_DATE = SYSDATE
			  ,CLASS_GB = #{classGb, jdbcType=NUMERIC}
		 WHERE upper(CHAR_NAME) = upper(#{charName, jdbcType=VARCHAR})
		   AND TARGET_GB = #{targetGb, jdbcType=VARCHAR}
	</update>
	
	<select id="selectCountBotPowerRank" resultType="int" parameterType="HashMap">
		SELECT COUNT(1)
		  FROM TBOT_POWER_RANK A
		 WHERE upper(A.CHAR_NAME) = upper(#{charName, jdbcType=VARCHAR})
		   AND A.TARGET_GB = #{targetGb, jdbcType=VARCHAR}
	</select>
	
	<select id="selectRoomBotPowerRank" resultType="HashMap" parameterType="HashMap">
      SELECT B.*
  		FROM (
	        SELECT DECODE(A.CHAR_NAME,B.USER_ID, B.ICON,'0') AS STAR_YN
	        	  ,upper(A.CHAR_NAME) as char_name
	        	  ,A.GUILD_NAME
			      ,A.SCORE
			      ,A.TARGET_GB
			      ,A.LV
			      ,A.CLASS_GB
			  FROM TBOT_POWER_RANK A,
			    (SELECT UPPER(S.USER_ID) AS USER_ID
			           ,ICON
				   FROM TBOT_SUPPORTERS S
				  WHERE S.USER_ID IS NOT NULL
				  GROUP BY S.USER_ID
				          ,S.ICON) B
		     WHERE A.GUILD_NAME = #{guildName, jdbcType=VARCHAR}
			   AND A.TARGET_GB = #{targetGb, jdbcType=VARCHAR}
			   AND upper(A.CHAR_NAME) = B.USER_ID(+)
			   AND A.MODIFY_DATE > SYSDATE - 30
			   AND A.CHAR_NAME IS NOT NULL
			   <if test="targetGb == '1' || targetGb == 1 ">
				   AND A.SCORE >= 1000
			   </if>
			   <if test="targetGb == '2' || targetGb == 2 ">
				   AND A.SCORE >= 500
			   </if>
			   
			   <if test="classGb != null and classGb != '' ">
				   AND A.CLASS_GB = #{classGb, jdbcType=VARCHAR}
			   </if>
			   
			   
		  ORDER BY A.SCORE DESC) B
 	WHERE ROWNUM &lt;= 10
		   
	</select>
	
	<insert id="insertBotPointRank" parameterType="HashMap">
		INSERT INTO TBOT_POINT_RANK
			  (USER_NAME
			  ,ROOM_NAME
			  ,SCORE
			  ,INSERT_DATE
			  ,CMD)
		 VALUES
			  (#{userName, jdbcType=VARCHAR}
			  ,#{roomName, jdbcType=VARCHAR}
			  ,#{score, jdbcType=NUMERIC}
			  ,SYSDATE
			  ,#{cmd, jdbcType=VARCHAR})
		
	</insert>
	<select id="selectBotPointRankOne" parameterType="HashMap" resultType="HashMap">
	  SELECT (SELECT A.USER_NAME||'♬현재 포인트: ' || NVL(SUM(A.SCORE), 0) || ' p♬'
		        FROM TBOT_POINT_RANK A
		       WHERE A.ROOM_NAME = #{roomName, jdbcType=VARCHAR}
		         AND UPPER(A.USER_NAME) = UPPER(#{newUserName, jdbcType=VARCHAR})
		         AND A.INSERT_DATE> TO_DATE('20250701','yyyymmdd')
		       GROUP BY A.USER_NAME ) AS TOT
			,(SELECT '출석: ' || NVL(SUM(A.SCORE), 0) || ' p (' ||
           			 DECODE(MAX(TO_CHAR(A.INSERT_DATE, 'mmdd')), TO_CHAR(SYSDATE, 'mmdd'), '완료', '미완료') || ')'
				FROM TBOT_POINT_RANK A
			   WHERE A.CMD = 'attendance'
				 AND A.ROOM_NAME = #{roomName, jdbcType=VARCHAR}
				 AND upper(A.USER_NAME) = upper(#{newUserName, jdbcType=VARCHAR})
				 AND A.INSERT_DATE> TO_DATE('20250701','yyyymmdd')
				  ) AS ATTENDANCE
		    ,(SELECT '주사위: '||NVL(SUM(A.SCORE),0) || ' p'
				FROM TBOT_POINT_RANK A
			   WHERE A.CMD in ( 'diceRoll','diceReroll')
				 AND A.ROOM_NAME = #{roomName, jdbcType=VARCHAR}
				 AND upper(A.USER_NAME) = upper(#{newUserName, jdbcType=VARCHAR})
				 AND A.INSERT_DATE> TO_DATE('20250701','yyyymmdd')
				  ) AS DICE
		    ,(SELECT '결투: '||NVL(SUM(A.SCORE),0) || ' p'
				FROM TBOT_POINT_RANK A
		       WHERE A.CMD = 'fight_e'
				 AND A.ROOM_NAME = #{roomName, jdbcType=VARCHAR}
				 AND upper(A.USER_NAME) = upper(#{newUserName, jdbcType=VARCHAR})
				 AND A.INSERT_DATE> TO_DATE('20250701','yyyymmdd')
				  ) AS FIGHT_SUM
			,(SELECT '('|| COUNT(A.SCORE) ||'승'
				FROM TBOT_POINT_RANK A
			   WHERE A.CMD = 'fight_e'
				 AND A.ROOM_NAME = #{roomName, jdbcType=VARCHAR}
				 AND upper(A.USER_NAME) = upper(#{newUserName, jdbcType=VARCHAR})
				 AND A.INSERT_DATE> TO_DATE('20250701','yyyymmdd')
				 AND A.SCORE > 0) AS FIGHT_WIN
			,(SELECT '/'||COUNT(A.SCORE)||'패)'
				FROM TBOT_POINT_RANK A
			   WHERE A.CMD = 'fight_e'
				 AND A.ROOM_NAME = #{roomName, jdbcType=VARCHAR}
				 AND upper(A.USER_NAME) = upper(#{newUserName, jdbcType=VARCHAR})
				 AND A.INSERT_DATE> TO_DATE('20250701','yyyymmdd')
				 AND A.SCORE &lt; 0) AS FIGHT_LOSE
			,(SELECT '뽑기: ' || NVL(SUM(A.SCORE),0)||' p'
				FROM TBOT_POINT_RANK A
			    WHERE A.CMD = 'gamble_s2'
				 AND A.ROOM_NAME = #{roomName, jdbcType=VARCHAR}
				 AND UPPER(A.USER_NAME) = UPPER(#{newUserName, jdbcType=VARCHAR})
				 AND A.INSERT_DATE> TO_DATE('20250701','yyyymmdd')
				 AND A.SCORE > 0) AS GAMBLE_WIN
		    ,(SELECT CASE
					   WHEN MAX(A.INSERT_DATE) >= TRUNC(SYSDATE) - 3 THEN
					    1
					   ELSE
					    0
				  END AS VALID_YN
			    FROM TBOT_POINT_RANK A
			   WHERE A.ROOM_NAME = #{roomName, jdbcType=VARCHAR}
			     AND UPPER(A.USER_NAME) = UPPER(#{newUserName, jdbcType=VARCHAR}) 
			     AND A.INSERT_DATE> TO_DATE('20250701','yyyymmdd')
			  ) AS VALID_YN
			,(
				SELECT CASE
						   WHEN COUNT(1) > 0 THEN
						    1
						   ELSE
						    0
					   END AS BLOCK_YN
				  FROM TBOT_BLOCK A
				 WHERE A.ROOM_NAME = #{roomName, jdbcType=VARCHAR}
			       AND UPPER(A.USER_NAME) = UPPER(#{newUserName, jdbcType=VARCHAR}) 
			  ) AS BLOCK_YN
			,(SELECT '야구: ' || NVL(SUM(A.SCORE),0)||' p' 
		        FROM TBOT_POINT_RANK A
		       WHERE A.CMD = 'baseball_e'
		         AND A.ROOM_NAME = #{roomName, jdbcType=VARCHAR}
		         AND UPPER(A.USER_NAME) = UPPER(#{newUserName, jdbcType=VARCHAR})
		         AND A.INSERT_DATE> TO_DATE('20250701','yyyymmdd')
		         AND A.SCORE > 0) AS BASEBALL_WIN
		    ,(SELECT NVL(MAX(A.WEAPON_LV), 0)
			    FROM TBOT_POINT_WEAPON A
			   WHERE ROOM_NAME = #{roomName, jdbcType=VARCHAR}
			     AND UPPER(USER_NAME) = UPPER(#{newUserName, jdbcType=VARCHAR})
			     AND INSERT_DATE > TO_DATE('20250701','yyyymmdd')
			 ) AS WEAPON
			,(SELECT ' (소모: ' || ABS(NVL(SUM(A.SCORE), 0)) || 'p)'
			    FROM TBOT_POINT_RANK A
			   WHERE ROOM_NAME = #{roomName, jdbcType=VARCHAR}
			     AND UPPER(USER_NAME) = UPPER(#{newUserName, jdbcType=VARCHAR})
			     AND A.CMD = 'weapon_upgrade2'
			     AND INSERT_DATE > TO_DATE('20250701','yyyymmdd')
			 ) AS WEAPON_USE
			,(
				SELECT COUNT(1)||'/'|| NVL(SUM(DECODE(B.OPEN_FLAG, '2', 1)),0)||'/'|| NVL(SUM(DECODE(B.DEL_YN, '1', 1)),0) AS BOX_TOT
				  FROM TBOT_POINT_ITEM_USER B
				 WHERE B.ROOM_NAME = #{roomName, jdbcType=VARCHAR}
				   AND UPPER(B.USER_NAME) = UPPER(#{newUserName, jdbcType=VARCHAR})
			) AS BOX_TOT
			, (
				SELECT NVL(SUM(DECODE(A.CMD, 'pointShop', -A.SCORE)),0) || 'p' || '/' || NVL(SUM(DECODE(A.CMD, 'pointBoxOpenDel', A.SCORE)),0) || 'p'
				  FROM TBOT_POINT_RANK A
				 WHERE ROOM_NAME = #{roomName, jdbcType=VARCHAR}
				   AND UPPER(USER_NAME) = UPPER(#{newUserName, jdbcType=VARCHAR})
				   AND A.CMD IN ('pointShop', 'pointBoxOpenDel')
				   AND INSERT_DATE > TO_DATE('20250701', 'yyyymmdd')
		   ) AS BOX_TOT_POINT
		  FROM DUAL
	</select>
	
	<select id="selectBotPointRankAll" parameterType="HashMap" resultType="HashMap">
			SELECT B.*
			  FROM (SELECT A.USER_NAME AS USER_NAME
					      ,SUM(A.SCORE) AS SCORE
					  FROM TBOT_POINT_RANK A
				     WHERE A.ROOM_NAME = #{roomName, jdbcType=VARCHAR}
				       AND A.INSERT_DATE> TO_DATE('20250701','yyyymmdd')
				     GROUP BY A.USER_NAME,A.ROOM_NAME
				     HAVING 1 = CASE
				      				 WHEN EXISTS (SELECT 1
												    FROM TBOT_BLOCK B
												   WHERE B.USER_NAME = A.USER_NAME
												     AND B.ROOM_NAME = A.ROOM_NAME) THEN
									  0
									 WHEN MAX(A.INSERT_DATE) >= TRUNC(SYSDATE) - 15 THEN
									  1
									 ELSE
									  0
								 END
				     ORDER BY SUM(A.SCORE) DESC) B
	</select>
	
	
	<select id="selectBotPointRankToday" parameterType="HashMap" resultType="HashMap">
			SELECT B.*
			  FROM (SELECT A.USER_NAME AS USER_NAME
					      ,SUM(A.SCORE) AS SCORE
					  FROM TBOT_POINT_RANK A
				     WHERE A.ROOM_NAME = #{roomName, jdbcType=VARCHAR}
					   AND CMD = 'attendance'
					   AND INSERT_DATE BETWEEN TRUNC(SYSDATE) AND TRUNC(SYSDATE)+1 
		     GROUP BY A.USER_NAME
		     ORDER BY SUM(A.SCORE) DESC) B
	</select>
	
	<select id="selectDailyCheck" parameterType="HashMap" resultType="int">
			  SELECT COUNT(1)
			    FROM TBOT_POINT_RANK A
		       WHERE A.ROOM_NAME = #{roomName, jdbcType=VARCHAR}
			     AND CMD = #{cmd, jdbcType=VARCHAR}
			     AND INSERT_DATE BETWEEN TRUNC(SYSDATE) AND TRUNC(SYSDATE)+1
			     AND upper(A.USER_NAME) = upper(#{userName, jdbcType=VARCHAR})
			     AND A.INSERT_DATE> TO_DATE('20250701','yyyymmdd')
	</select>
	
	<select id="selectHourCheck" parameterType="HashMap" resultType="String">
			  SELECT TO_CHAR(A.INSERT_DATE+#{timeDelay, jdbcType=NUMERIC}/60/24,'PM HH')||'시 ' ||TO_CHAR(A.INSERT_DATE+#{timeDelay, jdbcType=NUMERIC}/60/24,'MI')||'분'
			    FROM TBOT_POINT_RANK A
		       WHERE A.ROOM_NAME = #{roomName, jdbcType=VARCHAR}
			     AND CMD = #{cmd, jdbcType=VARCHAR}
			     AND INSERT_DATE BETWEEN SYSDATE-#{timeDelay, jdbcType=NUMERIC}/60/24 AND TRUNC(SYSDATE)+1
			     AND upper(A.USER_NAME) = upper(#{userName, jdbcType=VARCHAR})
			     AND A.INSERT_DATE> TO_DATE('20250701','yyyymmdd')
			     AND ROWNUM=1
	</select>
	
	<select id="selectBotPointRankNewScore" parameterType="HashMap" resultType="HashMap">
			/* selectBotPointRankNewScore */
			SELECT B.*
			  FROM (SELECT A.USER_NAME AS USER_NAME
					      ,SUM(A.SCORE) AS SCORE
					  FROM TBOT_POINT_RANK A
				     WHERE A.ROOM_NAME = #{roomName, jdbcType=VARCHAR}
					   AND upper(A.USER_NAME) = upper(#{userName, jdbcType=VARCHAR})
					   AND A.INSERT_DATE> TO_DATE('20250701','yyyymmdd')  						   
				     GROUP BY A.USER_NAME
				     ORDER BY SUM(A.SCORE) DESC) B
	</select>
	
	<insert id="insertMarketItemList" parameterType="List">
	    INSERT INTO T_MARKET_ITEM_PRICE
	    (item_name, price)
	    <foreach collection="list" item="item" separator="UNION ALL">
	        SELECT
	            #{item.item_name, jdbcType=VARCHAR},
	            #{item.CurrentMinPrice, jdbcType=NUMERIC}
	        FROM DUAL
	    </foreach>
	</insert>
	<insert id="insertAuctionItemOne" parameterType="HashMap">
	    INSERT INTO T_MARKET_ITEM_PRICE
	    (item_name, price)
	        SELECT
	            #{item_name, jdbcType=VARCHAR},
	            #{BuyPrice, jdbcType=NUMERIC}
	        FROM DUAL
	</insert>
	<select id="selectMarketItemPriceInfo" parameterType="HashMap" resultType="HashMap">
		/* selectMarketItemPriceInfo */
		SELECT BASE
		     , MIN(PRICE) AS MIN_PRICE
		     , MAX(PRICE) AS MAX_PRICE
		  FROM (
		        SELECT PRICE
		             , CASE #{param2, jdbcType=VARCHAR}
		                 WHEN 'HOUR' THEN TO_CHAR(INSERT_DATE, 'DD"일" HH24"시"')
		                 WHEN 'DAY'  THEN TO_CHAR(INSERT_DATE, 'MM"월" DD"일"')
		                 WHEN 'WEEK' THEN TO_CHAR(INSERT_DATE, 'MM') || '월 ' || TO_CHAR(INSERT_DATE, 'W') || '주차'
		                 WHEN 'MONTH' THEN TO_CHAR(INSERT_DATE, 'YYYY') || '년 ' || TO_CHAR(INSERT_DATE, 'MM') || '월'
		               END AS BASE
		             , ITEM_NAME
		             , INSERT_DATE
		          FROM T_MARKET_ITEM_PRICE
		         WHERE ITEM_NAME LIKE '%' || #{param1, jdbcType=VARCHAR} || '%'
		           AND INSERT_DATE > SYSDATE - 365
		           AND INSERT_DATE > 
		               CASE #{param2, jdbcType=VARCHAR}
		                 WHEN 'HOUR' THEN SYSDATE - INTERVAL '8' HOUR  
		                 WHEN 'DAY'  THEN SYSDATE - INTERVAL '8' DAY  
		                 WHEN 'WEEK' THEN ADD_MONTHS(SYSDATE, -2)
		                 WHEN 'MONTH' THEN ADD_MONTHS(SYSDATE, -12)   
		               END
		       )
		GROUP BY BASE
		ORDER BY MAX(INSERT_DATE) DESC
		
	</select>
	
	<select id="selectBotPointRankFightBeforeCount" parameterType="HashMap" resultType="int">
		SELECT COUNT(1)
		  FROM TBOT_POINT_FIGHT A
		 WHERE A.INSERT_DATE > SYSDATE - 2 / 60 / 24
		   AND A.USER_NAME = #{userName, jdbcType=VARCHAR}
		   AND A.ROOM_NAME = #{roomName, jdbcType=VARCHAR}
		   AND A.COMPLETE_YN = '1'

	</select>
	
	<select id="selectBotPointRankFightBeforeCheck" parameterType="HashMap" resultType="HashMap">
		/* selectBotPointRankFightBeforeCheck */
		SELECT B.*
		  FROM (SELECT A.USER_NAME AS USER_NAME
				      ,SUM(A.SCORE) AS SCORE
				  FROM TBOT_POINT_RANK A
			     WHERE A.ROOM_NAME = #{roomName, jdbcType=VARCHAR}
				   AND upper(A.USER_NAME) IN ( upper(#{param1, jdbcType=VARCHAR}),upper(#{userName, jdbcType=VARCHAR}))
				   AND A.INSERT_DATE> TO_DATE('20250701','yyyymmdd')
				   AND NOT EXISTS (SELECT *
								     FROM TBOT_BLOCK C
								    WHERE UPPER(C.USER_NAME) = upper(#{param1, jdbcType=VARCHAR})
								      AND C.ROOM_NAME = A.ROOM_NAME )
			     GROUP BY A.USER_NAME,A.ROOM_NAME
			    
			     ORDER BY SUM(A.SCORE) DESC) B
	</select>
	<select id="selectBotPointRankFightBeforeCheck2" parameterType="HashMap" resultType="HashMap">
		/* selectBotPointRankFightBeforeCheck2 */
		SELECT 
		    p1 || ' : ' || p2 AS RESULT
		  FROM (
		    SELECT 
		       #{userName, jdbcType=VARCHAR} || ' ' || (SELECT COUNT(*) FROM TBOT_POINT_FIGHT
		         WHERE CMD = 'fight_s'
		           AND ROOM_NAME = #{roomName, jdbcType=VARCHAR}
		           AND COMPLETE_YN = '1'
		           AND INSERT_DATE > TO_DATE('20250701','YYYYMMDD')
		           AND INSERT_DATE BETWEEN SYSDATE - 30 AND SYSDATE
		           AND upper(WINNER_NAME) = upper(#{param1, jdbcType=VARCHAR})
		           AND (
		               (UPPER(USER_NAME) = UPPER(#{param1, jdbcType=VARCHAR}) AND UPPER(TARGET_NAME) = UPPER(#{userName, jdbcType=VARCHAR}))
		            OR (UPPER(USER_NAME) = UPPER(#{userName, jdbcType=VARCHAR}) AND UPPER(TARGET_NAME) = UPPER(#{param1, jdbcType=VARCHAR}))
		           )
		        ) AS p1,
		
		        (SELECT COUNT(*) FROM TBOT_POINT_FIGHT
		         WHERE CMD = 'fight_s'
		           AND ROOM_NAME = #{roomName, jdbcType=VARCHAR}
		           AND COMPLETE_YN = '1'
		           AND INSERT_DATE > TO_DATE('20250701','YYYYMMDD')
		           AND INSERT_DATE BETWEEN SYSDATE - 30 AND SYSDATE
		           AND upper(WINNER_NAME) = upper(#{param1, jdbcType=VARCHAR})
		           AND (
		               (UPPER(USER_NAME) = UPPER(#{param1, jdbcType=VARCHAR}) AND UPPER(TARGET_NAME) = UPPER(#{userName, jdbcType=VARCHAR}))
		            OR (UPPER(USER_NAME) = UPPER(#{userName, jdbcType=VARCHAR}) AND UPPER(TARGET_NAME) = UPPER(#{param1, jdbcType=VARCHAR}))
		           )
		        ) || ' ' || #{param1, jdbcType=VARCHAR} AS p2
		    FROM DUAL
		)
	</select>
	
	<select id="selectBotPointFight" parameterType="HashMap" resultType="HashMap">
		SELECT A.SEQ,A.SCORE,A.TARGET_NAME,A.USER_NAME
		  FROM TBOT_POINT_FIGHT A
		 WHERE A.ROOM_NAME = #{roomName, jdbcType=VARCHAR}
		   AND A.CMD = 'fight_s'
		   AND A.COMPLETE_YN = '0'
		   AND A.INSERT_DATE BETWEEN SYSDATE - 2 / 60 / 24 AND SYSDATE
		   <if test="cmd != null and cmd == 'fight_s' ">
		   AND ( upper(A.TARGET_NAME) = upper(#{param1, jdbcType=VARCHAR}) or upper(a.user_name) = upper(#{userName, jdbcType=VARCHAR}) )
		   </if>
		   <if test="cmd != null and cmd == 'fight_e' ">
   		   AND upper(A.TARGET_NAME) = upper(#{userName, jdbcType=VARCHAR})
   		   </if>
   		   AND NOT EXISTS (SELECT *
						     FROM TBOT_BLOCK C
						    WHERE UPPER(C.USER_NAME) = upper(#{param1, jdbcType=VARCHAR})
						      AND C.ROOM_NAME = A.ROOM_NAME
						     )
	</select>
	
	<insert id="insertBotPointFightS" parameterType="HashMap" >
		INSERT INTO TBOT_POINT_FIGHT
			 (USER_NAME
			 ,TARGET_NAME
			 ,ROOM_NAME
			 ,SCORE
			 ,INSERT_DATE
			 ,CMD
			 ,COMPLETE_YN
		     ,SEQ)
	   SELECT #{userName, jdbcType=VARCHAR}
			 ,#{param1, jdbcType=VARCHAR}
			 ,#{roomName, jdbcType=VARCHAR}
			 ,#{param2, jdbcType=NUMERIC}
			 ,SYSDATE
			 ,'fight_s'
			 ,'0'
		     ,max(A.SEQ)+1 
		 FROM TBOT_POINT_FIGHT A
	</insert>
	<update id="updateBotPointFightE" parameterType="HashMap" >
		UPDATE TBOT_POINT_FIGHT A
		   SET A.COMPLETE_YN = '1'
		     , A.WINNER_NAME =#{winnerName, jdbcType=VARCHAR}
		 WHERE A.SEQ = #{seq, jdbcType=NUMERIC}
	</update>
	
	<insert id="insertBotPointFightE" parameterType="HashMap" >
		INSERT INTO TBOT_POINT_RANK
			 (USER_NAME
			 ,ROOM_NAME
			 ,SCORE
			 ,INSERT_DATE
			 ,CMD)
		VALUES
			 (#{newUserName, jdbcType=VARCHAR}
			 ,#{roomName, jdbcType=VARCHAR}
			 ,#{score, jdbcType=NUMERIC}
			 ,SYSDATE
			 ,'fight_e')
	</insert>
	
	<select id="selectParam1ToNewUserSearch" parameterType="HashMap" resultType="String" >
		/* selectParam1ToNewUserSearch */
		SELECT A.USER_NAME
		  FROM TBOT_POINT_RANK A
		 WHERE upper(A.USER_NAME) LIKE upper(#{param1, jdbcType=VARCHAR}) || '%'
		   AND A.ROOM_NAME = #{roomName, jdbcType=VARCHAR}
		   AND NOT EXISTS (SELECT *
		                     FROM TBOT_BLOCK C
		                    WHERE UPPER(C.USER_NAME) = upper(#{param1, jdbcType=VARCHAR}) 
		                      AND C.ROOM_NAME = A.ROOM_NAME
		                    )
		 GROUP BY A.USER_NAME
			  ,A.ROOM_NAME
	     HAVING 1 = CASE
						 WHEN MAX(A.INSERT_DATE) >= TRUNC(SYSDATE) - 3 THEN
						  1
						 ELSE
						  0
					END
		 ORDER BY CASE
		                WHEN LENGTH(#{param1, jdbcType=VARCHAR}) = LENGTH(A.USER_NAME) THEN
		                 1
		                ELSE
		                 0
		          END desc         
	</select>
	
	<select id="selectBotPointUpdownS" parameterType="HashMap" resultType="HashMap">
		 /* selectBotPointUpdownS */
		 SELECT *
		   FROM TBOT_POINT_UPDOWN A
		  WHERE A.CMD = 'updown_s2'
		    AND A.COMPLETE_YN &lt; 6
		    AND A.ROOM_NAME =#{roomName, jdbcType=VARCHAR}
		    AND A.USER_NAME = #{userName, jdbcType=VARCHAR}
		    AND A.END_YN ='0'
		    AND ROWNUM = 1	
	</select>
	
	<update id="updateBotPointUpdownS" parameterType="HashMap">
		 /* updateBotPointUpdownS */
		 UPDATE TBOT_POINT_UPDOWN A
		    SET A.COMPLETE_YN = A.COMPLETE_YN + 1
		       ,${colName}    = #{inNumber, jdbcType=NUMERIC}
		       <if test="endYn == '1' || endYn == 1 ">
		       ,A.END_YN = '1'
		       </if>
		  WHERE A.SEQ 	 = #{seq, jdbcType=NUMERIC}
		    AND A.END_YN = '0'
		
	</update>
	
	<insert id="insertBotPointUpdownS" parameterType="HashMap">
		/* insertBotPointUpdownS */
		 INSERT INTO TBOT_POINT_UPDOWN
		       (USER_NAME
		       ,TARGET_NUMBER
		       ,ROOM_NAME
		       ,INSERT_DATE
		       ,CMD
		       ,COMPLETE_YN
		       ,END_YN
		       ,SEQ)
	     SELECT #{userName, jdbcType=VARCHAR}
		       ,#{randomNumber, jdbcType=VARCHAR}
		       ,#{roomName, jdbcType=VARCHAR}
		       ,SYSDATE
		       ,'updown_s2'
		       ,0
		       ,'0'
		       ,max(A.SEQ)+1 
	       FROM TBOT_POINT_UPDOWN A
	</insert>
	
	<select id="selectBotPointBaseballIngChk" parameterType="HashMap" resultType="HashMap">
			/* selectBotPointBaseballIngChk (진행중 체크 ing = 1 진행중 ) */
			SELECT COUNT(1) OVER() AS ING
				 ,A.SEQ
				 ,A.TARGET_NUMBER
			  FROM TBOT_POINT_BASEBALL_M A
			 WHERE A.ROOM_NAME = #{roomName, jdbcType=VARCHAR}
			   AND A.END_YN = '0'
			   AND ROWNUM = 1
	</select>
	
	
	<insert id="insertBotPointBaseballS" parameterType="HashMap">
			/* insertBotPointBaseballS 신규 시작 */
			 INSERT INTO TBOT_POINT_BASEBALL_M
				   (SEQ
				   ,ROOM_NAME
				   ,USER_NAME
				   ,TARGET_NUMBER
				   ,END_CNT
				   ,END_YN)
			 SELECT MAX(A.SEQ) + 1
				   ,#{roomName, jdbcType=VARCHAR}
				   ,#{userName, jdbcType=VARCHAR}
				   ,#{targetNumber, jdbcType=VARCHAR}
				   ,0
				   ,'0'
			   FROM TBOT_POINT_BASEBALL_M A
	</insert>
	
	<insert id="insertBotPointBaseballIng" parameterType="HashMap">
			/*진행 중이라면 ... insertBotPointBaseballIng */
			INSERT INTO TBOT_POINT_BASEBALL_DT
				 (SEQ
				 ,TRY_CNT
				 ,TRY_NUMBER
				 ,RET_CNT)
			VALUES
				 (#{seq, jdbcType=NUMERIC}
				 ,NVL((SELECT MAX(TRY_CNT)
					   FROM TBOT_POINT_BASEBALL_DT B
					  WHERE B.SEQ = #{seq, jdbcType=NUMERIC}), 0) + 1
				 ,#{tryNumber, jdbcType=VARCHAR}
				 ,#{retCnt, jdbcType=VARCHAR})
	</insert>
	
	<update id="updateBotPointBaseballE" parameterType="HashMap">
			/* updateBotPointBaseballE */
		    UPDATE TBOT_POINT_BASEBALL_M A
			   SET A.END_YN        = '1'
				  ,A.END_USER_NAME = #{userName, jdbcType=VARCHAR}
				  ,A.END_CNT      = (SELECT COUNT(1)
									   FROM TBOT_POINT_BASEBALL_DT B
									  WHERE B.SEQ = #{seq, jdbcType=NUMERIC})
			 WHERE A.SEQ = #{seq, jdbcType=NUMERIC}
	</update>
	
	<insert id="insertBotPointStone" parameterType="HashMap">
		INSERT INTO TBOT_POINT_STONE
			  (USER_NAME
			  ,ROOM_NAME
			  ,CNT
			  ,INSERT_DATE
			  ,CMD)
		 VALUES
			  (#{userName, jdbcType=VARCHAR}
			  ,#{roomName, jdbcType=VARCHAR}
			  ,#{cnt, jdbcType=NUMERIC}
			  ,SYSDATE
			  ,#{cmd, jdbcType=VARCHAR})
		
	</insert>
	
	<select id="selectCntBotPointWeapon" parameterType="HashMap" resultType="int">
		SELECT COUNT(1)
		  FROM TBOT_POINT_WEAPON
		 WHERE USER_NAME = #{userName, jdbcType=VARCHAR}
		   AND ROOM_NAME = #{roomName, jdbcType=VARCHAR}
	</select>
	
	<select id="selectBotPointWeapon" parameterType="HashMap" resultType="HashMap">
		SELECT WEAPON_LV
			  ,FAIL_PCT
		  FROM TBOT_POINT_WEAPON
		 WHERE USER_NAME = #{userName, jdbcType=VARCHAR}
		   AND ROOM_NAME = #{roomName, jdbcType=VARCHAR}
	</select>
	
	<insert id="insertBotPointWeapon" parameterType="HashMap">
		INSERT INTO TBOT_POINT_WEAPON
			 (USER_NAME
			 ,ROOM_NAME
			 ,WEAPON_LV
			 ,FAIL_PCT
			 ,INSERT_DATE
			 ,MODIFY_DATE)
		VALUES
			 (#{userName, jdbcType=VARCHAR}
			 ,#{roomName, jdbcType=VARCHAR}
			 ,0
			 ,0
			 ,SYSDATE
			 ,SYSDATE)
	</insert>
	<insert id="insertBotPointWeaponLog" parameterType="HashMap">
		INSERT INTO TBOT_POINT_WEAPON_LOG
			 (USER_NAME
			 ,ROOM_NAME
			 ,TRY_LV
			 ,SUCCESS_YN
			 ,ADD_PCT
			 ,INSERT_DATE)
		VALUES
			 (#{userName, jdbcType=VARCHAR}
			 ,#{roomName, jdbcType=VARCHAR}
			 ,#{tryLv, jdbcType=NUMERIC}
			 ,#{successYn, jdbcType=VARCHAR} 
			 ,#{addPct, jdbcType=NUMERIC}
			 ,SYSDATE)
	</insert>
	<update id="updateBotPointWeapon" parameterType="HashMap">
		UPDATE TBOT_POINT_WEAPON
		   SET WEAPON_LV   = #{weaponLv, jdbcType=NUMERIC}
			  ,FAIL_PCT    = #{failPct, jdbcType=NUMERIC}
			  ,MODIFY_DATE = SYSDATE
		 WHERE USER_NAME = #{userName, jdbcType=VARCHAR}
		   AND ROOM_NAME = #{roomName, jdbcType=VARCHAR}
	</update>
	
	<select id="selectBotPointWeaponRank" parameterType="HashMap" resultType="HashMap"> 
		SELECT A.USER_NAME AS USER_NAME
			  ,A.WEAPON_LV || '단계 (' || FAIL_PCT || '%)' as GRADE
		  FROM TBOT_POINT_WEAPON A
		 WHERE A.ROOM_NAME = #{roomName, jdbcType=VARCHAR}
		   AND A.MODIFY_DATE > SYSDATE - 15
		   AND NOT EXISTS (SELECT *
							 FROM TBOT_BLOCK C
						    WHERE UPPER(C.USER_NAME) = UPPER(A.USER_NAME)
						      AND C.ROOM_NAME = A.ROOM_NAME)
		 ORDER BY A.WEAPON_LV  DESC
			     ,A.FAIL_PCT DESC
		
	</select>
	
	<insert id="insertBotBlock" parameterType="HashMap"> 
		INSERT INTO TBOT_BLOCK
			 (USER_NAME
			 ,ROOM_NAME)
		VALUES
			 (#{param1, jdbcType=VARCHAR}
			 ,#{roomName, jdbcType=VARCHAR})
	</insert>
	<delete id="deleteBotBlock" parameterType="HashMap"> 
		delete from TBOT_BLOCK
		 where USER_NAME = #{param1, jdbcType=VARCHAR}
		   and ROOM_NAME = #{roomName, jdbcType=VARCHAR}
	</delete>
	
	<delete id="updateGamePlayYn" parameterType="HashMap"> 
		update tbot_point_play_yn a
		   set a.play_yn = #{playYn, jdbcType=VARCHAR}
		 where game_NAME = #{param1, jdbcType=VARCHAR}
		   and ROOM_NAME = #{roomName, jdbcType=VARCHAR}
	</delete>
	
	<select id="selectGamePlayYn" parameterType="HashMap" resultType="HashMap"> 
		SELECT A.GAME_NAME AS NAME,A.PLAY_YN
		  FROM TBOT_POINT_PLAY_YN A
		 WHERE A.ROOM_NAME = #{roomName, jdbcType=VARCHAR}
		   AND PLAY_YN = '0'
	</select>
	<select id="selectBotBlock" parameterType="HashMap" resultType="HashMap"> 
		SELECT USER_NAME AS NAME
		  FROM TBOT_BLOCK
		 WHERE A.ROOM_NAME = #{roomName, jdbcType=VARCHAR}
	</select>
	
	
	<select id="selectBotPointWeaponRank1st" resultType="String">
		SELECT A.WEAPON_LV || '단계 (' || FAIL_PCT || '%)' as GRADE
		  FROM (SELECT *
				FROM TBOT_POINT_WEAPON 
			    WHERE WEAPON_LV = (SELECT MAX(WEAPON_LV)
								FROM TBOT_POINT_WEAPON)
			    ORDER BY FAIL_PCT DESC) A
		 WHERE ROWNUM = 1
		
	</select>
	
	<select id="selectWeaponLvCheck" parameterType="HashMap" resultType="int">
		SELECT NVL(SUM(A.WEAPON_LV), 0)
		  FROM TBOT_POINT_WEAPON A
		 WHERE ROOM_NAME = #{roomName, jdbcType=VARCHAR} 
		   AND USER_NAME = #{userName, jdbcType=VARCHAR}
	</select>
	<select id="selectWeaponLvCheckForPoint" parameterType="HashMap" resultType="int">
		SELECT NVL(SUM(A.WEAPON_LV), 0)
		  FROM TBOT_POINT_WEAPON A
		 WHERE ROOM_NAME = #{roomName, jdbcType=VARCHAR} 
		   AND upper(USER_NAME) = upper(#{newUserName, jdbcType=VARCHAR})
	</select>
	
	<select id="selectBossHit" parameterType="HashMap" resultType="HashMap">
		SELECT A.HP,A.MAX_HP,A.SEQ,A.ORG_HP
		  FROM TBOT_BOSS_HIT A
		 WHERE ROOM_NAME = #{roomName, jdbcType=VARCHAR}
		   AND A.END_YN = '0'
	</select>
	
	<update id="updateBossHit" parameterType="HashMap">
		UPDATE TBOT_BOSS_HIT A
		   SET A.HP     = #{newHp, jdbcType=NUMERIC}
			  ,A.END_YN = #{endYn, jdbcType=VARCHAR}
			  ,A.MODIFY_DATE = SYSDATE
		 WHERE A.ROOM_NAME = #{roomName, jdbcType=VARCHAR}
		   AND A.HP = #{hp, jdbcType=NUMERIC}
		   AND A.SEQ =#{seq, jdbcType=NUMERIC} 
		   AND END_YN = '0'
	</update>
	
	<insert id="insertBossHitLog" parameterType="HashMap">
	   INSERT INTO TBOT_BOSS_HIT_LOG
		    (ROOM_NAME
		    ,USER_NAME
		    ,SCORE
		    ,END_YN
		    ,SEQ)
	   VALUES
		    (#{roomName, jdbcType=VARCHAR}
		    ,#{userName, jdbcType=VARCHAR}
		    ,#{score, jdbcType=NUMERIC}
		    ,#{endYn, jdbcType=NUMERIC}
		    ,#{seq, jdbcType=NUMERIC})
	</insert>
	
	
	
	<select id="selectBotPointBoss" parameterType="HashMap" resultType="HashMap">
		SELECT A.REWARD,A.ORG_HP,A.HP,A.SEQ,to_char(A.INSERT_DATE,'yyyymmdd hh24miss') as START_DATE,
		       A.EVADE_RATE,A.ATK_RATE,A.DEF_RATE,CRIT_DEF_RATE,
		       A.ATK_POWER,A.DEF_POWER,A.HIDE_RULE,A.DEBUFF
		  FROM TBOT_POINT_BOSS A
		 WHERE ROOM_NAME = #{roomName, jdbcType=VARCHAR}
		   AND A.END_YN = '0'
	</select>
	
	<update id="updateBotPointBoss" parameterType="HashMap">
		UPDATE TBOT_POINT_BOSS A
		   SET A.HP     = #{newHp, jdbcType=NUMERIC}
			  ,A.END_YN = #{endYn, jdbcType=VARCHAR}
			  ,A.MODIFY_DATE = SYSDATE
			  
		  <if test="heavensPunishment == 1">
			  ,A.DEBUFF = A.DEBUFF +10
	      </if>
		  <if test="useDebuff == 1">
			  ,A.DEBUFF = A.DEBUFF -1
	      </if>
		 WHERE A.ROOM_NAME = #{roomName, jdbcType=VARCHAR}
		   AND A.HP = #{hp, jdbcType=NUMERIC}
		   AND A.SEQ =#{seq, jdbcType=NUMERIC} 
		   AND END_YN = '0'
	</update>
	<insert id="insertBotPointBoss" parameterType="HashMap">
		INSERT INTO TBOT_POINT_BOSS
			 (SEQ
			 ,INSERT_DATE
			 ,ROOM_NAME
			 ,REWARD
			 ,ORG_HP
			 ,HP
			 ,EVADE_RATE
			 ,ATK_RATE
			 ,ATK_POWER
			 ,DEF_RATE
			 ,DEF_POWER
			 ,HIDE_RULE
			 ,CRIT_DEF_RATE)
			 SELECT MAX(SEQ) + 1
				  ,TO_DATE(#{startDate, jdbcType=DATE},'yyyy-mm-dd hh24:mi:ss')
				  ,#{roomName, jdbcType=VARCHAR}
				  ,#{reward, jdbcType=NUMERIC}
				  ,#{org_hp, jdbcType=NUMERIC}
				  ,#{org_hp, jdbcType=NUMERIC}
				  ,#{evadeRate, jdbcType=NUMERIC}
				  ,#{atkRate, jdbcType=NUMERIC}
				  ,#{atkPower, jdbcType=NUMERIC}
				  ,#{defRate, jdbcType=NUMERIC}
				  ,#{defPower, jdbcType=NUMERIC}
				  ,#{hideRule, jdbcType=VARCHAR}
				  ,#{critDefRate, jdbcType=NUMERIC}
			   FROM TBOT_POINT_BOSS A
	</insert>
	
	<insert id="insertBotPointBossLog" parameterType="HashMap">
	   INSERT INTO TBOT_POINT_BOSS_LOG
		    (ROOM_NAME
		    ,USER_NAME
		    ,SCORE
		    ,END_YN
		    ,SEQ
		    ,EVADE_YN
		    ,ATK_POWER
		    ,DEF_POWER
		    )
	   VALUES
		    (#{roomName, jdbcType=VARCHAR}
		    ,#{userName, jdbcType=VARCHAR}
		    ,#{score, jdbcType=NUMERIC}
		    ,#{endYn, jdbcType=NUMERIC}
		    ,#{seq, jdbcType=NUMERIC}
		    ,#{evadeYn, jdbcType=VARCHAR} 
		    ,#{atkPower, jdbcType=NUMERIC} 
		    ,#{defPower, jdbcType=NUMERIC} 
		    
		    )
	</insert>
	
	<select id="selectTop3Contributors" parameterType="HashMap" resultType="HashMap">
		SELECT sum(cnt) over() as tot_cnt , A.*
		  FROM (
		    SELECT user_name, count(user_name) as cnt, SUM(score) AS score
		      FROM TBOT_POINT_BOSS_log
		     WHERE room_name = #{roomName, jdbcType=VARCHAR}
		       AND seq = (
		         SELECT MAX(seq)
		           FROM TBOT_POINT_BOSS_log
		          WHERE room_name = #{roomName, jdbcType=VARCHAR}
		       )
		       AND SCORE > 0
		     GROUP BY user_name
		     ORDER BY count(user_name) DESC
		  ) A
		 WHERE ROWNUM &lt;= 10
	</select>
	
	<insert  id="insertPointNewBoxOpen" parameterType="HashMap">
		INSERT INTO TBOT_POINT_ITEM_USER
			 (USER_NAME
			 ,ROOM_NAME
			 ,ITEM_NO
			 ,LV)
		VALUES
			 (#{userName, jdbcType=VARCHAR}
			 ,#{roomName, jdbcType=VARCHAR}
			 ,0
			 ,0)
		
	</insert>
	
	<update id="updatePointNewBoxOpen" parameterType="HashMap">
		UPDATE TBOT_POINT_ITEM_USER U
		   SET U.MODIFY_DATE = SYSDATE
		     <if test="cmd != null and cmd == 'pointBoxOpenUp' ">
		     , U.LV = 	   #{rdLv, jdbcType=NUMERIC}
		     , U.ITEM_NO = #{rdItemNo, jdbcType=NUMERIC}
		     , U.OPEN_FLAG = #{openFlag, jdbcType=VARCHAR}
		     </if>
		     <if test="cmd != null and cmd == 'pointBoxOpenDel' ">
		     , U.DEL_YN = '1'
		     </if>
		 WHERE U.USER_NAME = #{userName, jdbcType=VARCHAR}
		   AND U.ROOM_NAME = #{roomName, jdbcType=VARCHAR}
		   AND U.LV = 0
		   AND U.ITEM_NO = 0
		   AND U.OPEN_FLAG = '0'
		   AND U.DEL_YN = '0'
		   AND ROWNUM = 1
	</update>
	<select id="selectPointItemUserOpenFlag1" parameterType="HashMap" resultType="HashMap">
		SELECT U.OPEN_FLAG,
		       M.ITEM_NO,
		       M.ITEM_NAME,
		       M.ITEM_DESC,
		       U.LV
		  FROM TBOT_POINT_ITEM_USER U, TBOT_POINT_ITEM_M M
		 where U.ITEM_NO = M.ITEM_NO
		   and U.OPEN_FLAG = '1'
		   AND ROWNUM = 1
	</select>
	<update id="updatePointNewBoxOpen2" parameterType="HashMap">
		UPDATE TBOT_POINT_ITEM_USER U
		   SET U.MODIFY_DATE = SYSDATE
		     , U.OPEN_FLAG = #{openFlag, jdbcType=VARCHAR}
		 WHERE U.USER_NAME = #{userName, jdbcType=VARCHAR}
		   AND U.ROOM_NAME = #{roomName, jdbcType=VARCHAR}
		   AND U.OPEN_FLAG = '1'
		   AND ROWNUM = 1
	</update>
	<select id="selectPointItemUserOpenFlag" parameterType="HashMap" resultType="String">
		SELECT U.OPEN_FLAG
		  FROM TBOT_POINT_ITEM_USER U
		 WHERE U.USER_NAME = #{userName, jdbcType=VARCHAR}
		   AND U.ROOM_NAME = #{roomName, jdbcType=VARCHAR}
		   AND U.OPEN_FLAG IN ('0','1')
		   AND U.DEL_YN ='0'
		   AND ROWNUM = 1
	</select>
	<select id="selectPointItemUserOpenRate" parameterType="HashMap" resultType="int">
		SELECT TO_NUMBER(TRUNC(OPN / (DEL + OPN) * 100)) AS RATE
		  FROM (SELECT NVL(SUM(DECODE(A.DEL_YN, '1', 1)),0) AS DEL
		    		  ,NVL(SUM(DECODE(A.OPEN_FLAG, '2', 1)),0) AS OPN
				  FROM TBOT_POINT_ITEM_USER A
			     WHERE A.USER_NAME = #{userName, jdbcType=VARCHAR}
				   AND A.ROOM_NAME = #{roomName, jdbcType=VARCHAR}
			   )
	</select>
	<select id="selectPointItemInfoList" parameterType="HashMap" resultType="HashMap">
		SELECT M.ITEM_NO
			  ,M.ITEM_NAME
			  ,M.ITEM_DESC
			  ,M.MAX_LV
			  ,M.ITEM_GB
		  FROM TBOT_POINT_ITEM_M M
		<if test="cmd == 'pointBoxOpenUp' ">
	     WHERE (M.ITEM_GB IS NULL OR M.ITEM_GB != '1')
			   OR (
			        M.ITEM_GB = '1'
			        AND NOT EXISTS (
			            SELECT 1
			            FROM TBOT_POINT_ITEM_USER U
			            WHERE U.ITEM_NO = M.ITEM_NO
			              AND U.ROOM_NAME = #{roomName, jdbcType=VARCHAR}
			              AND U.DEL_YN = '0'
			              AND U.OPEN_FLAG = '2'
			        )
			        AND NOT EXISTS (
			            SELECT 1
			            FROM TBOT_POINT_ITEM_USER U2
			            JOIN TBOT_POINT_ITEM_M M2
			              ON U2.ITEM_NO = M2.ITEM_NO
			            WHERE U2.USER_NAME = #{userName, jdbcType=VARCHAR}
			              AND U2.DEL_YN = '0'
			              AND M2.ITEM_GB = '1'
			        )
			   )
		</if>
		
	</select>
	
	<select id="selectPointItemUserList" parameterType="HashMap" resultType="HashMap">
		SELECT M.ITEM_NO
			  ,M.ITEM_NAME
			  ,M.ITEM_DESC
			  ,NVL(SUM(U.LV), 0) AS ITEM_LV
			  ,M.MAX_LV
		  FROM TBOT_POINT_ITEM_M    M
			  ,TBOT_POINT_ITEM_USER U
		 WHERE M.ITEM_NO = U.ITEM_NO
		   AND upper(U.USER_NAME) = upper(#{userName, jdbcType=VARCHAR})
		   AND U.ROOM_NAME = #{roomName, jdbcType=VARCHAR}
		   AND U.DEL_YN ='0'
		   AND U.OPEN_FLAG ='2'
		 GROUP BY M.ITEM_NO
			     ,M.ITEM_NAME
			     ,M.ITEM_DESC
			     ,M.MAX_LV
		 
		 ORDER BY M.ITEM_NO
		
	</select>
	<select id="selectPointItemUserListForPoint" parameterType="HashMap" resultType="HashMap">
		SELECT M.ITEM_NO
			  ,M.ITEM_NAME
			  ,M.ITEM_DESC
			  ,NVL(SUM(U.LV), 0) AS ITEM_LV
			  ,M.MAX_LV
		  FROM TBOT_POINT_ITEM_M    M
			  ,TBOT_POINT_ITEM_USER U
		 WHERE M.ITEM_NO = U.ITEM_NO
		   AND upper(U.USER_NAME) = upper(#{newUserName, jdbcType=VARCHAR})
		   AND U.ROOM_NAME = #{roomName, jdbcType=VARCHAR}
		   AND U.DEL_YN ='0'
		   AND U.OPEN_FLAG ='2'
		 GROUP BY M.ITEM_NO
			     ,M.ITEM_NAME
			     ,M.ITEM_DESC
			     ,M.MAX_LV
		 ORDER BY M.ITEM_NO
		
	</select>
	
	<select id="selectPointItemUserCount" parameterType="HashMap" resultType="int">
		SELECT COUNT(1)
		  FROM TBOT_POINT_ITEM_USER U
		 WHERE U.USER_NAME = #{userName, jdbcType=VARCHAR}
		   AND U.ROOM_NAME = #{roomName, jdbcType=VARCHAR}
		
	</select>
	<select id="selectPointNewBoxCount" parameterType="HashMap" resultType="int">
		SELECT COUNT(1)
		  FROM TBOT_POINT_ITEM_USER U
		 WHERE U.USER_NAME = #{userName, jdbcType=VARCHAR}
		   AND U.ROOM_NAME = #{roomName, jdbcType=VARCHAR}
		   AND U.OPEN_FLAG IN ('0','1')
		   AND U.DEL_YN = '0'
	</select>
	
	<select id="selectPointItemOptionList" parameterType="HashMap" resultType="HashMap">
		SELECT M.ITEM_NO
			 ,CASE
				   WHEN U.ITEM_NO IS NOT NULL THEN
				    M.ITEM_NAME
				   ELSE
				    '[' || RPAD('*', LENGTH(M.ITEM_NAME) - 2, '*') || ']'
			  END AS ITEM_NAME
			 ,CASE
				   WHEN U.ITEM_NO IS NOT NULL THEN
				    M.ITEM_DESC
				   ELSE
				    RPAD('*', LENGTH(M.ITEM_DESC), '*')
			  END AS ITEM_DESC
		  FROM TBOT_POINT_ITEM_M M
			 ,(SELECT DISTINCT ITEM_NO
				FROM TBOT_POINT_ITEM_USER
			    WHERE ROOM_NAME = #{roomName, jdbcType=VARCHAR} ) U
		 WHERE M.ITEM_NO = U.ITEM_NO(+)
		 ORDER BY M.ITEM_NO
		
	</select>
	
	<select id="selectBotPointItemUserRankAll" parameterType="HashMap" resultType="HashMap">
		SELECT TRUNC(B.OPEN_SUM / B.TOT_CNT * 100) || '%' AS RATE
			 ,B.*
		  FROM (SELECT A.USER_NAME AS USER_NAME
				    ,SUM(A.LV) AS SCORE
				    ,COUNT(DISTINCT A.ITEM_NO) AS KINDS
				    ,COUNT(A.OPEN_FLAG) AS TOT_CNT
				    ,SUM(DECODE(A.OPEN_FLAG, '2', 1, 0)) AS OPEN_SUM
				    ,NVL(SUM(CASE WHEN A.OPEN_FLAG != '2' AND A.DEL_YN ='0' THEN 1 END),0) AS YET_SUM
				FROM TBOT_POINT_ITEM_USER A
			    WHERE A.ROOM_NAME = #{roomName, jdbcType=VARCHAR}
				 AND A.INSERT_DATE > TO_DATE('20250701', 'yyyymmdd')
			    GROUP BY A.USER_NAME
					  ,A.ROOM_NAME
			   HAVING 1 =CASE
				    WHEN EXISTS (SELECT 1
						  FROM TBOT_BLOCK B
						 WHERE B.USER_NAME = A.USER_NAME
						   AND B.ROOM_NAME = A.ROOM_NAME) THEN
					0
				    WHEN MAX(A.INSERT_DATE) >= TRUNC(SYSDATE) - 15 THEN
					1
				    ELSE
					0
			   
			   END AND COUNT(A.OPEN_FLAG) >= 10) B
		 ORDER BY TRUNC(B.OPEN_SUM / B.TOT_CNT * 100) DESC
	</select>
</mapper>