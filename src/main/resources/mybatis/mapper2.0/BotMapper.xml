<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="my.prac.core.prjbot.dao.BotDAO">
	<insert id="insertBotWordSave" parameterType="hashMap">
		/* bot.xml insertBotWordSave */
		INSERT INTO TBOT_WORD_SAVE
			 (REQ
			 ,RES
			 ,ROOM_NAME
			 ,USER_NAME
			 ,INSERT_DATE
			 ,LIMIT_YN)
		SELECT '/'||#{req, jdbcType=VARCHAR}
			  ,#{res, jdbcType=VARCHAR}
			  ,#{roomName, jdbcType=VARCHAR}
			  ,#{userName, jdbcType=VARCHAR}
			  ,SYSDATE
			  ,'0'
		  FROM DUAL
		 WHERE NOT EXISTS (SELECT * 
		 					 FROM TBOT_WORD_SAVE C 
		 					WHERE C.REQ = '/'||#{req, jdbcType=VARCHAR}
		 					  AND C.LIMIT_YN IN ('1','2'))
    </insert>
    
    <select id="selectBotWordSaveOne" parameterType="hashMap" resultType="String" >
		/* bot.xml selectBotWordSaveOne */
		SELECT RES
		  FROM (SELECT *
				FROM TBOT_WORD_SAVE A
			    WHERE A.REQ = #{param0, jdbcType=VARCHAR}
				 AND A.ROOM_NAME = #{roomName, jdbcType=VARCHAR}
			     AND A.LIMIT_YN = '0'
			    ORDER BY DBMS_RANDOM.VALUE)
		 WHERE ROWNUM = 1
	</select>
	
	<select id="selectBotLimitWordSaveAll" parameterType="hashMap" resultType="String" >
		 /* bot.xml selectBotLimitWordSaveAll */
		SELECT RES
		  FROM (SELECT '3' AS ORD
				    ,RES
				    ,SORT
				FROM (SELECT LISTAGG(A.REQ, ', ') WITHIN GROUP(ORDER BY A.REQ) || ' → ' || A.RES AS RES,SORT
					   FROM TBOT_WORD_SAVE A
					  WHERE A.LIMIT_YN = #{limitYn, jdbcType=VARCHAR}
					  GROUP BY A.RES,SORT
					  )
				  )
		 ORDER BY ORD,SORT DESC
		 
	</select>
	
	<select id="selectBotWordSaveAll" parameterType="hashMap" resultType="String" >
		 /* bot.xml selectBotWordSaveAll */
		SELECT RES
		  FROM (
			   SELECT '1' AS ORD
					  ,RES
				 FROM (SELECT A.REQ || ' → ' || LISTAGG(A.RES, ', ') WITHIN GROUP(ORDER BY A.RES) AS RES
					     FROM TBOT_WORD_SAVE A
					    WHERE A.ROOM_NAME = #{roomName, jdbcType=VARCHAR}
						  AND A.LIMIT_YN = '0'
					    GROUP BY A.REQ
					    )
			   )
		 ORDER BY ORD
		 
	</select>
	
	<select id="selectBotImgSaveAll" parameterType="hashMap" resultType="String" >
		 /* bot.xml selectBotImgSaveAll */
		SELECT RES
		  FROM (SELECT '2' AS ORD
					  ,LISTAGG(B.IN_PRM, ', ') WITHIN GROUP(ORDER BY B.IN_PRM) || ' → ' || B.OUT_PRM AS RES
				  FROM TBOT_IMG_MCH B
				 WHERE (B.ROOM_NAME IS NULL OR B.ROOM_NAME = #{roomName, jdbcType=VARCHAR})
			     GROUP BY B.OUT_PRM)
		 ORDER BY ORD
		 
	</select>
	
	<select  id="selectBotWordSaveMasterCnt" parameterType="hashMap" resultType="int" >
		SELECT COUNT(1) 
		  FROM TBOT_WORD_SAVE_MASTER A
		 WHERE A.USER_NAME = #{userName, jdbcType=VARCHAR}
		   AND NVL(A.ROOM_NAME, #{roomName, jdbcType=VARCHAR}) = #{roomName, jdbcType=VARCHAR}
		
	</select>
	
	<delete id="deleteBotWordSaveMaster" parameterType="hashMap">
		/* bot.xml deleteBotWordSaveMaster */
		DELETE FROM TBOT_WORD_SAVE A
		 WHERE A.REQ = '/'||#{req, jdbcType=VARCHAR}
		   AND A.RES = #{res, jdbcType=VARCHAR}
		   AND A.ROOM_NAME = #{roomName, jdbcType=VARCHAR}
		   AND A.LIMIT_YN = '0'
	</delete>
	<delete id="deleteBotWordSaveAllDeleteMaster" parameterType="hashMap">
		/* bot.xml deleteBotWordSaveAllDeleteMaster */
		DELETE FROM TBOT_WORD_SAVE A
		 WHERE A.ROOM_NAME = #{roomName, jdbcType=VARCHAR}
		   AND A.LIMIT_YN = '0'
	</delete>
	
	<delete id="deleteBotWordSave" parameterType="hashMap">
		/* bot.xml deleteBotWordSave */
		DELETE FROM TBOT_WORD_SAVE A
		 WHERE A.REQ = '/'||#{req, jdbcType=VARCHAR}
		   AND A.RES = #{res, jdbcType=VARCHAR}
		   AND (A.USER_NAME = #{userName, jdbcType=VARCHAR}
		        OR 
		        A.USER_NAME IN (SELECT B.NAME_A
								  FROM TBOT_NAME_MCH B
								 WHERE B.NAME_B = #{userName, jdbcType=VARCHAR}
								)
				)
		   AND A.ROOM_NAME = #{roomName, jdbcType=VARCHAR}
		   AND A.LIMIT_YN = '0'
	</delete>
	
	<select id="selectBotImgSaveOne" parameterType="String" resultType="String" >
		/* bot.xml selectBotImgSaveOne */
		SELECT RES
		  FROM TBOT_IMG_SAVE A
	     WHERE A.REQ = #{param, jdbcType=VARCHAR}
	</select>
	
	<insert id="insertBotImgSaveOne" parameterType="hashMap">
		/* bot.xml insertBotImgSaveOne */
		INSERT INTO TBOT_IMG_SAVE
			 (REQ
			 ,RES
			 )
		SELECT #{asis, jdbcType=VARCHAR}
			  ,#{tobe, jdbcType=VARCHAR}
		  FROM DUAL
    </insert>
    
    <select id="selectBotImgMch" parameterType="hashMap" resultType="String" >
		/* bot.xml selectBotImgMch */
		SELECT A.OUT_PRM
		  FROM TBOT_IMG_MCH A
		 WHERE A.IN_PRM = #{param0, jdbcType=VARCHAR}
		   AND (A.ROOM_NAME IS NULL OR A.ROOM_NAME = #{roomName, jdbcType=VARCHAR})
	</select>
	
	<select id="selectBotRaidSaveAll" parameterType="hashMap" resultType="String" >
		 /* bot.xml selectBotRaidSaveAll */
		SELECT A.CHAR_NAME
		  FROM TBOT_RAID_SAVE A
		 WHERE A.ROOM_NAME = #{roomName, jdbcType=VARCHAR}
	</select>
	<insert id="insertBotRaidSaveOne" parameterType="hashMap">
		/* bot.xml insertBotRaidSaveOne */
		INSERT INTO TBOT_RAID_SAVE
			 (ROOM_NAME
			 ,CHAR_NAME
			 )
		SELECT #{roomName, jdbcType=VARCHAR}
			  ,#{param1, jdbcType=VARCHAR}
		  FROM DUAL
    </insert>
    <select id="selectSupporters" parameterType="String" resultType="int" >
		 /* bot.xml selectSupporters */
		SELECT COUNT(1)
		  FROM TBOT_SUPPORTERS A
		 WHERE A.USER_ID = #{param1, jdbcType=VARCHAR}
	</select>
	
	
	<select id="selectBotImgCharSave" parameterType="String" resultType="String" >
		/* bot.xml selectBotImgCharSave */
		SELECT RES
		  FROM TBOT_IMG_CHAR_SAVE A
	     WHERE A.REQ = #{req, jdbcType=VARCHAR}
	       AND ROWNUM = 1
	</select>
	
	<insert id="insertBotImgCharSave" parameterType="hashMap">
		/* bot.xml insertBotImgCharSave */
		INSERT INTO TBOT_IMG_CHAR_SAVE
			 (CHAR_NAME
			 ,REQ
			 ,RES
			 ,TITLE
			 ,CLASS_NAME
			 )
		SELECT #{char_name, jdbcType=VARCHAR}
		      ,#{req, jdbcType=VARCHAR}
			  ,#{res, jdbcType=VARCHAR}
			  ,#{title, jdbcType=VARCHAR}
			  ,#{class_name, jdbcType=VARCHAR}
		  FROM DUAL
    </insert>
    
    <select id="selectBotImgCharSaveI3" parameterType="String" resultType="hashMap" >
		/* bot.xml selectBotImgCharSaveI3 */
		SELECT TITLE,CHAR_NAME,CLASS_NAME
		  FROM TBOT_IMG_CHAR_SAVE A
	     WHERE A.RES = #{res, jdbcType=VARCHAR}
	       AND ROWNUM = 1
	</select>
	
	
	<insert id="insertBotWordHis" parameterType="String">
		/* bot.xml insertBotWordHis */
		INSERT INTO TBOT_WORD_HIS
			 (REQ
			 ,RES
			 ,ROOM_NAME
			 ,USER_NAME
			 ,INSERT_DATE)
		VALUES
			 (#{req, jdbcType=VARCHAR}
			 ,#{res, jdbcType=VARCHAR}
			 ,#{roomName, jdbcType=VARCHAR}
			 ,#{userName, jdbcType=VARCHAR}
			 ,sysdate)
	</insert>
	
	<select id="selectRoomList" resultType="String" parameterType="hashMap">
		/* bot.xml selectRoomList */
		SELECT A.ROOM_NAME
		  FROM TBOT_WORD_SAVE_MASTER A
		 WHERE A.ROOM_NAME IS NOT NULL
		   AND A.TEST_YN ='1'
		   AND EXISTS (SELECT 1
						 FROM TBOT_WORD_SAVE_MASTER B
					    WHERE B.USER_NAME = #{userName, jdbcType=VARCHAR}
						  AND B.ROOM_NAME IS NULL)
		 GROUP BY A.ROOM_NAME
	</select>
	
	<select id="selectMarketCondition" resultType="hashMap" parameterType="hashMap">
		/* bot.xml selectMarketCondition */
		SELECT XX.DT
			  ,MIN(XX.GOLD) || '~' || MAX(XX.GOLD) AS SISE
		  FROM (SELECT X.DT
				     ,TO_NUMBER(SUBSTR(X.MSG, INSTR(X.MSG, '-') + 2, INSTR(SUBSTR(X.MSG, INSTR(X.MSG, '-') + 2), 'G') - 1)) AS GOLD
				FROM (SELECT AA.MON || '월 ' || AA.WEEK_OF_MONTH || '주차' AS DT
						   ,SUBSTR(TO_CHAR(B.RES), INSTR(TO_CHAR(B.RES), #{param1, jdbcType=VARCHAR}), INSTR(SUBSTR(TO_CHAR(B.RES), INSTR(TO_CHAR(B.RES), #{param1, jdbcType=VARCHAR}), 30), '♬')) AS MSG
					   FROM (WITH ISO AS (SELECT TO_CHAR(WEEK_START, 'YYYY-MM-DD') WEEK_START
											   ,TO_CHAR(WEEK_END, 'YYYY-MM-DD') WEEK_END
											   ,TO_CHAR(WEEK_START, 'MM') MON
											   ,TO_CHAR(WEEK_START, 'W') WEEK_OF_MONTH
									    FROM (SELECT TRUNC(START_DT + LEVEL, 'D') WEEK_START
												    ,TRUNC(START_DT + LEVEL, 'D') + 6 WEEK_END
											  FROM (SELECT TO_DATE('20240801', 'YYYYMMDD') - 1 START_DT
													      ,TO_DATE('20251231', 'YYYYMMDD') END_DT
													FROM DUAL)
											CONNECT BY LEVEL &lt;= END_DT - START_DT)
									   GROUP BY WEEK_START
											 ,WEEK_END
									   ORDER BY WEEK_START)
							    SELECT A.*
								 FROM ISO A) AA, TBOT_WORD_HIS B
								WHERE RES IS NOT NULL
								  AND (B.REQ LIKE '/ㄱㅁㅈ%' OR B.REQ LIKE '/경매장%')
								  AND B.RES LIKE '%' || #{param1, jdbcType=VARCHAR} || '%'
								  AND B.INSERT_DATE BETWEEN AA.WEEK_START AND AA.WEEK_END
								  AND B.INSERT_DATE > SYSDATE - 60
					 ) X) XX
		 GROUP BY XX.DT
		 HAVING MAX(XX.GOLD) * 0.5 &lt; MIN(XX.GOLD)
		UNION
		SELECT '　' DT
			 ,SUBSTR(TO_CHAR(A.RES), INSTR(TO_CHAR(A.RES), #{param1, jdbcType=VARCHAR}), INSTR(SUBSTR(TO_CHAR(A.RES), INSTR(TO_CHAR(A.RES), #{param1, jdbcType=VARCHAR}), 30), ' - ')) AS MSG
		
		  FROM TBOT_WORD_HIS A
		 WHERE RES IS NOT NULL
		   AND (A.REQ LIKE '/ㄱㅁㅈ%' OR A.REQ LIKE '/경매장%')
		   AND A.RES LIKE '%' || #{param1, jdbcType=VARCHAR} || '%'
		   AND TO_CHAR(SYSDATE, 'dd') BETWEEN TO_CHAR(A.INSERT_DATE, 'dd') - 3 AND TO_CHAR(A.INSERT_DATE, 'dd') + 3
		   AND ROWNUM = 1
		 ORDER BY 1 DESC
		
	</select>
	
</mapper>