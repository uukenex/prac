<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="my.prac.core.prjbot.dao.BotNewDAO">
	<insert id="insertBotPointNew" parameterType="HashMap">
		INSERT INTO
		TBOT_POINT_NEW
		(USER_NAME
		,ROOM_NAME
		,SCORE
		,INSERT_DATE
		,CMD)
		VALUES
		(#{userName, jdbcType=VARCHAR}
		,#{roomName, jdbcType=VARCHAR}
		,#{score,
		jdbcType=NUMERIC}
		,SYSDATE
		,#{cmd, jdbcType=VARCHAR})

	</insert>

	<!-- 1) 유저 -->
	<select id="selectUser" resultType="my.prac.core.game.dto.User">
		SELECT USER_NAME,
		ROOM_NAME,
		LV,
		EXP_CUR,
		EXP_NEXT,
		HP_CUR,
		HP_MAX,
		HP_REGEN,
		ATK_MIN,
		ATK_MAX,
		CRIT_RATE,
		CRIT_DMG,
		TARGET_MON,
		INSERT_DATE
		FROM TBOT_POINT_NEW_USER
		WHERE USER_NAME
		= #{userName}
		AND ROOM_NAME = #{roomName}
	</select>
	
	<select id="selectAttackDeathStats" resultType="my.prac.core.game.dto.AttackDeathStat">
        SELECT
            COUNT(*) AS TOTAL_ATTACKS,
            SUM(CASE WHEN DEATH_YN = '1' THEN 1 ELSE 0 END) AS TOTAL_DEATHS
        FROM TBOT_POINT_NEW_BATTLE_LOG
        WHERE USER_NAME = #{userName}
          AND ROOM_NAME = #{roomName}
    </select>

	<select id="selectKillStats" resultType="my.prac.core.game.dto.KillStat">
		SELECT
		bl.TARGET_MON_LV AS MON_NO,
		m.MON_NAME AS MON_NAME,
		COUNT(*) AS KILL_COUNT
		FROM TBOT_POINT_NEW_BATTLE_LOG bl
		JOIN TBOT_POINT_NEW_MON_INFO m
		ON m.MON_NO = bl.TARGET_MON_LV
		WHERE bl.USER_NAME = #{userName}
		AND bl.ROOM_NAME = #{roomName}
		AND bl.KILL_YN = 1
		GROUP BY bl.TARGET_MON_LV, m.MON_NAME
		ORDER BY KILL_COUNT DESC, MON_NO ASC
	</select>

	<select id="selectAllMonsters"
		resultType="my.prac.core.game.dto.Monster">
		SELECT MON_NO,
		MON_NAME,
		MON_HP,
		MON_ATK,
		MON_EXP,
		MON_DROP,
		MON_PATTEN
		FROM TBOT_POINT_NEW_MON_INFO
		ORDER BY MON_NO
	</select>
	<!-- 2) 몬스터 -->
	<select id="selectMonsterByNo"
		resultType="my.prac.core.game.dto.Monster">
		SELECT MON_NO,
		MON_HP,
		MON_ATK,
		MON_EXP,
		MON_DROP,
		MON_PATTEN,
		MON_NAME
		FROM TBOT_POINT_NEW_MON_INFO
		WHERE MON_NO = #{monNo}
	</select>
	<select id="selectMonsterByName"
		resultType="my.prac.core.game.dto.Monster">
		SELECT MON_NO,
		MON_HP,
		MON_ATK,
		MON_EXP,
		MON_DROP,
		MON_PATTEN,
		MON_NAME
		FROM TBOT_POINT_NEW_MON_INFO
		WHERE MON_NAME = #{monName}
	</select>
	<!-- 3) 진행중 전투: NOW_YN=1 묶음의 누적 대미지와 타겟 몬 번호 -->
	<select id="selectOngoingBattle"
		resultType="my.prac.core.game.dto.OngoingBattle">
		SELECT monNo, totalDealtDmg
		FROM (
		SELECT
		TARGET_MON_LV AS
		monNo,
		NVL(SUM(ATK_DMG), 0) AS totalDealtDmg,
		MAX(INSERT_DATE) AS
		lastTime
		FROM TBOT_POINT_NEW_BATTLE_LOG
		WHERE USER_NAME = #{userName}
		AND ROOM_NAME = #{roomName}
		AND NOW_YN = '1'
		GROUP BY TARGET_MON_LV
		ORDER BY lastTime DESC
		)
		WHERE ROWNUM = 1
	</select>
	<!-- 4) 최신 공격 시간 (쿨타임 체크용) -->
	<select id="selectLastAttackTime"
		resultType="java.sql.Timestamp">
		SELECT MAX(INSERT_DATE)
		FROM TBOT_POINT_NEW_BATTLE_LOG
		WHERE
		USER_NAME = #{userName}
		AND ROOM_NAME = #{roomName}
	</select>
	<!-- 5) 유저 전투 후 업데이트 -->
	<update id="updateUserAfterBattle">
		UPDATE TBOT_POINT_NEW_USER
		SET LV = #{newLv},
		EXP_CUR =
		#{newExpCur},
		EXP_NEXT = #{newExpNext},
		HP_CUR = #{newHpCur},
		HP_MAX =
		#{newHpMax},
		ATK_MIN = #{newAtkMin},
		ATK_MAX = #{newAtkMax},
		CRIT_RATE= #{critRate},
		HP_REGEN  = #{hpRegen}
		WHERE
		USER_NAME = #{userName}
		AND ROOM_NAME = #{roomName}
	</update>
	<!-- 6) 전투 로그 적재 (NOW_YN=1 계속 누적) -->
	<insert id="insertBattleLog"
		parameterType="my.prac.core.game.dto.BattleLog">
		INSERT INTO TBOT_POINT_NEW_BATTLE_LOG
		(USER_NAME,
		ROOM_NAME, LV, TARGET_MON_LV,
		GAIN_EXP, ATK_DMG, MON_DMG, ATK_CRIT_YN,
		MON_PATTEN, INSERT_DATE, KILL_YN, NOW_YN, DROP_YN, DEATH_YN)
		VALUES
		(#{userName},
		#{roomName}, #{lv}, #{targetMonLv},
		#{gainExp}, #{atkDmg}, #{monDmg},
		#{atkCritYn},
		#{monPatten}, SYSTIMESTAMP, #{killYn}, #{nowYn},
		#{dropYn},#{deathYn})
	</insert>
	<!-- 7) 전투 종료: NOW_YN=1 → 0 -->
	<update id="closeOngoingBattle">
		UPDATE TBOT_POINT_NEW_BATTLE_LOG
		SET NOW_YN = '0'
		WHERE USER_NAME = #{userName}
		AND ROOM_NAME = #{roomName}
		AND NOW_YN =
		'1'
	</update>
	<!-- HP만 갱신 -->
	<update id="updateUserHpOnly">
		UPDATE TBOT_POINT_NEW_USER
		SET HP_CUR = #{newHpCur}
		WHERE USER_NAME = #{userName}
		AND ROOM_NAME = #{roomName}
	</update>
	<update id="updateUserTargetMon">
		UPDATE TBOT_POINT_NEW_USER
		SET TARGET_MON =
		#{newMonNo}
		WHERE USER_NAME = #{userName}
		AND ROOM_NAME = #{roomName}
	</update>

	<insert id="insertUserWithTarget">
		INSERT INTO TBOT_POINT_NEW_USER (
		USER_NAME, ROOM_NAME, LV, EXP_CUR,
		EXP_NEXT,
		HP_CUR, HP_MAX, HP_REGEN, ATK_MIN, ATK_MAX,
		CRIT_RATE,
		CRIT_DMG, INSERT_DATE, TARGET_MON
		) VALUES (
		#{userName}, #{roomName},
		1, 0, 100,       <!-- 초기 레벨/경험치 규칙 -->
		10, 10, 1,      <!-- HP_CUR/HP_MAX/HP_REGEN 기본값 (스키마 기본과 다르면 맞춰 수정) -->
		1, 5,             <!-- ATK_MIN/MAX -->
		10, 150,           <!-- CRIT_RATE(%), CRIT_DMG(%) -->
		SYSDATE,
		#{targetMonNo}
		)
	</insert>
	<!-- 진행중 전투 종료 (이미 존재) -->
	
	<select id="selectParam1ToNewUserSearch" parameterType="HashMap" resultType="String" >
		/* selectParam1ToNewUserSearch */
		SELECT A.USER_NAME
		  FROM TBOT_POINT_NEW_USER A
		 WHERE upper(A.USER_NAME) LIKE upper(#{param1, jdbcType=VARCHAR}) || '%'
		   AND A.ROOM_NAME = #{roomName, jdbcType=VARCHAR}
		   AND NOT EXISTS (SELECT *
		                     FROM TBOT_BLOCK C
		                    WHERE UPPER(C.USER_NAME) = upper(#{param1, jdbcType=VARCHAR}) 
		                      AND C.ROOM_NAME = A.ROOM_NAME
		                    )
		 GROUP BY A.USER_NAME
			  ,A.ROOM_NAME
	     HAVING 1 = CASE
						 WHEN MAX(A.INSERT_DATE) >= TRUNC(SYSDATE) - 3 THEN
						  1
						 ELSE
						  0
					END
		 ORDER BY CASE
		                WHEN LENGTH(#{param1, jdbcType=VARCHAR}) = LENGTH(A.USER_NAME) THEN
		                 1
		                ELSE
		                 0
		          END desc         
	</select>
	<!--
      최근(now_yn=1) 로그에서 lucky_yn 1건 반환 (없으면 null)
      Oracle 11gR2: ROWNUM 사용
    -->
    <select id="selectLatestLuckyYn" parameterType="map" resultType="int">
        SELECT lucky_yn
        FROM (
            SELECT bl.lucky_yn
            FROM TBOT_POINT_NEW_BATTLE_LOG bl
            WHERE bl.user_name = #{userName}
              AND bl.room_name = #{roomName}
              AND bl.now_yn    = 1
            ORDER BY bl.insert_date DESC
        )
        WHERE ROWNUM = 1
    </select>
</mapper>